#version 330 core

// Texture coords
in vec2 tex_coords;

// Texture number
uniform sampler2D image;
uniform bool blur;
uniform bool horizontal;
//uniform float weights[5] = float[] (0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);
uniform float weights[5] = float[] (0.08824969, 0.06065307, 0.03246525, 0.01353353,
0.00439369);

out vec4 outColor;

void main()
{
    if (blur) {
        vec2 tex_offset = 1.0 / textureSize(image, 0);
        vec3 result = texture(image, tex_coords).rgb * weights[0];
        if (horizontal) {
            for (int i = 1; i < 5; ++i) {
                result += texture(image, tex_coords
                + vec2(tex_offset.x * i, 0.0)).rgb * weights[i];
                result += texture(image, tex_coords
                - vec2(tex_offset.x * i, 0.0)).rgb * weights[i];
            }
        } else {
            for (int i = 1; i < 5; ++i) {
                result += texture(image, tex_coords
                + vec2(0.0, tex_offset.y * i)).rgb * weights[i];
                result += texture(image, tex_coords
                - vec2(0.0, tex_offset.y * i)).rgb * weights[i];
            }
        }
        outColor = vec4(result, 1.0);
    } else {
        outColor = texture(image, tex_coords);
    }
}